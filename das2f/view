cat >view1.md <<'~~~'
# query
    % from common.pl but using vfb.pl instead of fb.pl
    consult(vfb),
    consult(shapes),
    consult(values),
    consult(names),
    bagof([Name, Kind, Clr, L,T,R,B, V,Syn,Val],
	  (
	      ( das_fact(kind,V,"edge"),
		Kind = "edge",
		Val  = "-",
		L = "-", T = "-", R = "-", B = "-", Clr = "-", Syn = "-",
		Name = "-"
	      )
	      ;
	      (
		  diagram_fact(vertex,V,1)
		  %,Val="-"
		  ,das_fact(color,V,Clr)
		  ,das_fact(bbL,V,L)
		  ,das_fact(bbT,V,T)
		  ,das_fact(bbR,V,R)
		  ,das_fact(bbB,V,B)
		  ,das_fact(kind,V,Kind)
		  %,diagram_fact(value,V,Long),sub_string(Long,0,1,_,Val)
		  ,diagram_fact(value,V,Val)
		  ,diagram_fact(synonym,V,Syn)
		  ,nameof(V,Name)
	      )
	  ) ,Bag),
	  json_write(user_output,Bag)
# display
  (Name Kind Color Left Top Right Bottom VertexID Synonym Value)
  [[${Name} ${Kind} ${Color} [${Left},${Top},${Right},${Bottom}] ${VertexID} ${Synonym} "${Value.substring(0,9)}..."]]
~~~

cat >view1 <<'~~~'
trap 'cleanup' ERR
trap 'cleanup' EXIT

cleanup () {
    exit 1
}

while true
do
    querydisplay view1
    sleep 1
done
~~~

cat >view2.md <<'~~~'
# query
    % from common.pl but using vfb.pl instead of fb.pl
    consult(fb),
    consult(shapes),
    consult(values),
    consult(names),
    consult(ports),
    bagof([Name, Direction],
	  (
		  diagram_fact(vertex,V,1),
		  isellipse(V),
          nameof(V,Name),
		  das_fact(direction,V,Direction)
      ),	
	  Bag),
	  json_write(user_output,Bag)
# display
  (Name Direction)
  [[${Name} ${Direction}]]

~~~
cat >view2 <<'~~~'
while true
do
    querydisplay view2
   sleep 1
done
~~~

cat >view3.md <<'~~~'
# query
    % from common.pl but using vfb.pl instead of fb.pl
    consult(fb),
    consult(shapes),
    consult(values),
    consult(names),
    consult(ports),
    bagof([Name, Direction],
	  (
		  diagram_fact(vertex,V,1),
		  isellipse(V),
          nameof(V,Name),
		  das_fact(direction,V,Direction)
      ),	
	  Bag),
	  json_write(user_output,Bag)
# display
  (Name Direction)
  [[${Name} ${Direction}]]

~~~
cat >view3 <<'~~~'
while true
do
    querydisplay view3
   sleep 1
done
~~~

